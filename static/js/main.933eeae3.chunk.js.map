{"version":3,"sources":["Selectors/CartItemsSelector.js","Components/Menubar.js","actions/action.js","Components/Cart.js","Components/Categories.js","Selectors/MenuSelector.js","Components/MenuItems.js","Components/Home.js","App.js","reducers/reducer.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["CartItemsSelector","useSelector","state","menuReducer","menudata","filter","item","counter","Menubar","cartItemsSelected","Navbar","color","dark","expand","className","NavbarBrand","Nav","navbar","NavItem","to","Badge","pill","reduce","total","setCategory","selectedCategory","dispatch","getState","type","payload","category","addCounter","id","subtractCounter","Cart","useDispatch","Container","map","ListGroup","ListGroupItem","ListGroupItemHeading","title","fluid","price","Math","round","ButtonGroup","Button","onClick","e","target","handleSubtract","disabled","console","log","handleAdd","length","Categories","action","MenuSelector","currentstate","MenuItems","menuselector","useEffect","loading","a","fetch","res","json","jsondata","ListGroupItemText","description","Home","App","path","initialState","rootReducer","combineReducers","newSetState","newState","removeitemstate","resetstate","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.933eeae3.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nfunction CartItemsSelector() {\r\n  const currentstate = useSelector((state) => state.menuReducer);\r\n  return currentstate.menudata.filter((item) => item.counter > 0);\r\n}\r\n\r\nexport default CartItemsSelector;\r\n","import React from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, Badge } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CartItemsSelector from \"../Selectors/CartItemsSelector\";\r\n\r\nfunction Menubar() {\r\n  const cartItemsSelected = CartItemsSelector();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        color=\"dark\"\r\n        dark\r\n        expand=\"lg\"\r\n        className=\"d-flex justify-content-around\"\r\n      >\r\n        <NavbarBrand>Shopping App</NavbarBrand>\r\n        <Nav navbar>\r\n          <NavItem>\r\n            <Link to=\"/cart\" className=\"nav-link\">\r\n              Cart{\" \"}\r\n              <Badge color=\"primary\" pill>\r\n                {cartItemsSelected.reduce(\r\n                  (total, item) => item.counter + total,\r\n                  0\r\n                )}\r\n              </Badge>\r\n            </Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menubar;\r\n","const FETCH_MENU = \"FETCH_MENU\";\r\nconst SET_CATEGORY = \"SET_CATEGORY\";\r\nconst ADD_COUNTER = \"ADD_COUNTER\";\r\nconst SUBTRACT_COUNTER = \"SUBTRACT_COUNTER\";\r\nconst REMOVE_ITEM_COUNTER = \"REMOVE_ITEM_COUNTER\";\r\nconst RESET = \"RESET\";\r\n\r\nexport const fetchMenuData = () => async (dispatch, getState) => {\r\n  const res = await fetch(\"http://localhost:3000/menu\");\r\n  const json = await res.json();\r\n  const jsondata = [\r\n    ...json.map((item) => {\r\n      return { ...item, counter: 0 };\r\n    }),\r\n  ];\r\n\r\n  dispatch({\r\n    type: FETCH_MENU,\r\n    payload: jsondata,\r\n  });\r\n};\r\n\r\nexport const setCategory = (selectedCategory) => (dispatch, getState) => {\r\n  const currentData = getState().menuReducer.menudata;\r\n\r\n  dispatch({\r\n    type: SET_CATEGORY,\r\n    payload: {\r\n      state: currentData,\r\n      category: selectedCategory,\r\n    },\r\n  });\r\n};\r\n\r\nexport const addCounter = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: ADD_COUNTER,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const subtractCounter = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: SUBTRACT_COUNTER,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const removeItemCounter = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: REMOVE_ITEM_COUNTER,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const reset = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: RESET,\r\n    payload: \"\",\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  Badge,\r\n  Container,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport CartItemsSelector from \"../Selectors/CartItemsSelector\";\r\nimport { addCounter } from \"../actions/action\";\r\nimport { subtractCounter } from \"../actions/action\";\r\nimport { removeItemCounter } from \"../actions/action\";\r\nimport { reset } from \"../actions/action\";\r\n\r\nfunction Cart() {\r\n  const dispatch = useDispatch();\r\n\r\n  function handleAdd(e) {\r\n    console.log(e);\r\n    dispatch(addCounter(e.target.id));\r\n  }\r\n  function handleSubtract(e) {\r\n    dispatch(subtractCounter(e.target.id));\r\n  }\r\n\r\n  const cartItemsSelected = CartItemsSelector();\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {cartItemsSelected.map((item) => (\r\n          <ListGroup key={item.title}>\r\n            <ListGroupItem className=\"m-4\">\r\n              <ListGroupItemHeading className=\"mb-4\">\r\n                {item.title}\r\n              </ListGroupItemHeading>\r\n\r\n              <Container\r\n                fluid\r\n                className=\"d-flex align-items-center justify-content-between p-0\"\r\n              >\r\n                {item.counter === 0 ? (\r\n                  <Badge color=\"light\">\r\n                    <h1>$ {item.price}</h1>\r\n                  </Badge>\r\n                ) : (\r\n                  <Badge color=\"light\">\r\n                    $ {Math.round(item.price) * item.counter}\r\n                  </Badge>\r\n                )}\r\n                <ButtonGroup>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    id={item.title}\r\n                    onClick={(e) => handleSubtract(e)}\r\n                  >\r\n                    -\r\n                  </Button>\r\n                  <Button disabled color=\"primary\">\r\n                    {item.counter}\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    id={item.title}\r\n                    onClick={(e) => handleAdd(e)}\r\n                  >\r\n                    +\r\n                  </Button>\r\n                </ButtonGroup>\r\n                <Button\r\n                  id={item.title}\r\n                  color=\"danger\"\r\n                  onClick={(e) => dispatch(removeItemCounter(e.target.id))}\r\n                >\r\n                  remove\r\n                </Button>\r\n              </Container>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        ))}\r\n      </Container>\r\n      <Container>\r\n        <Container className=\"d-flex flex-row justify-content-between m-2\">\r\n          <Button color=\"secondary\" disabled>\r\n            Total -{\" $ \"}\r\n            {cartItemsSelected.reduce(\r\n              (total, item) => Math.round(item.price) * item.counter + total,\r\n              0\r\n            )}\r\n          </Button>\r\n          {cartItemsSelected.length > 0 && (\r\n            <div>\r\n              <Button\r\n                color=\"danger\"\r\n                className=\"mr-4\"\r\n                onClick={(e) => dispatch(reset())}\r\n              >\r\n                Empty Cart\r\n              </Button>\r\n              <Button color=\"primary\" className=\"mr-3\">\r\n                Checkout\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { Container, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCategory } from \"../actions/action\";\r\n\r\nfunction Categories() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Container className=\"w-25 m-4\">\r\n      <ListGroup>\r\n        <ListGroupItem action onClick={() => dispatch(setCategory(\"all\"))}>\r\n          All\r\n        </ListGroupItem>\r\n        <ListGroupItem action onClick={() => dispatch(setCategory(\"fruit\"))}>\r\n          Fruit\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          action\r\n          onClick={() => dispatch(setCategory(\"vegetable\"))}\r\n        >\r\n          Vegetable\r\n        </ListGroupItem>\r\n        <ListGroupItem action onClick={() => dispatch(setCategory(\"dairy\"))}>\r\n          Dairy\r\n        </ListGroupItem>\r\n        <ListGroupItem action onClick={() => dispatch(setCategory(\"bakery\"))}>\r\n          Bakery\r\n        </ListGroupItem>\r\n        <ListGroupItem action onClick={() => dispatch(setCategory(\"vegan\"))}>\r\n          Vegan\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nfunction MenuSelector() {\r\n  const currentstate = useSelector((state) => state.menuReducer);\r\n  const selectedCategory = currentstate.category;\r\n\r\n  if (selectedCategory === \"all\") {\r\n    return currentstate.menudata;\r\n  } else {\r\n    const ret = currentstate.menudata.filter(\r\n      (item) => item.type === selectedCategory\r\n    );\r\n    return ret;\r\n  }\r\n}\r\n\r\nexport default MenuSelector;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMenuData } from \"../actions/action\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  Badge,\r\n  Container,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport MenuSelector from \"../Selectors/MenuSelector\";\r\nimport { addCounter } from \"../actions/action\";\r\nimport { subtractCounter } from \"../actions/action\";\r\n\r\nfunction MenuItems() {\r\n  const dispatch = useDispatch();\r\n  const menuselector = MenuSelector();\r\n  const currentstate = useSelector((state) => state.menuReducer);\r\n\r\n  useEffect(() => {\r\n    if (currentstate.loading === true) {\r\n      dispatch(fetchMenuData());\r\n    }\r\n  }, [currentstate.loading, dispatch]);\r\n\r\n  function handleAdd(e) {\r\n    dispatch(addCounter(e.target.id));\r\n  }\r\n  function handleSubtract(e) {\r\n    dispatch(subtractCounter(e.target.id));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {menuselector.map((item) => (\r\n        <ListGroup key={item.title}>\r\n          <ListGroupItem className=\"m-4\">\r\n            <ListGroupItemHeading className=\"mb-4\">\r\n              {item.title}\r\n            </ListGroupItemHeading>\r\n            <Container className=\"d-flex flex-column align-items-start ml-0 pl-0\">\r\n              <Badge color=\"secondary\" className=\"mb-4\">\r\n                {item.type}\r\n              </Badge>\r\n              <ListGroupItemText className=\"mb-4\">\r\n                {item.description}\r\n              </ListGroupItemText>\r\n              <Container\r\n                fluid\r\n                className=\"d-flex align-items-center justify-content-between p-0\"\r\n              >\r\n                {item.counter === 0 ? (\r\n                  <Badge color=\"light\">$ {Math.round(item.price)}</Badge>\r\n                ) : (\r\n                  <Badge color=\"light\">\r\n                    $ {Math.round(item.price) * item.counter}\r\n                  </Badge>\r\n                )}\r\n                {item.counter <= 0 ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    id={item.title}\r\n                    onClick={(e) => handleAdd(e)}\r\n                  >\r\n                    Add to cart\r\n                  </Button>\r\n                ) : (\r\n                  <ButtonGroup>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      id={item.title}\r\n                      onClick={(e) => handleSubtract(e)}\r\n                    >\r\n                      -\r\n                    </Button>\r\n                    <Button disabled color=\"primary\">\r\n                      {item.counter}\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      id={item.title}\r\n                      onClick={(e) => handleAdd(e)}\r\n                    >\r\n                      +\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                )}\r\n              </Container>\r\n            </Container>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MenuItems;\r\n","import React from \"react\";\r\nimport Categories from \"./Categories\";\r\nimport MenuItems from \"./MenuItems\";\r\nimport { Container } from \"reactstrap\";\r\nfunction Home() {\r\n  return (\r\n    <Container className=\"d-flex flex-row m-4\">\r\n      <Categories />\r\n      <MenuItems />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Menubar from \"./Components/Menubar\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Cart from \"./Components/Cart\";\nimport Home from \"./Components/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Menubar />\n      <Switch>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  loading: true,\r\n  menudata: [],\r\n  category: \"all\",\r\n};\r\n\r\nexport const menuReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_MENU\":\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        menudata: [...action.payload],\r\n        category: \"all\",\r\n      };\r\n    case \"SET_CATEGORY\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        menudata: action.payload.state,\r\n        category: action.payload.category,\r\n      };\r\n    case \"ADD_COUNTER\":\r\n      const newSetState = [\r\n        ...state.menudata.map((item) => {\r\n          if (item.title === action.payload) {\r\n            return { ...item, counter: item.counter + 1 };\r\n          } else {\r\n            return { ...item };\r\n          }\r\n        }),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        menudata: [...newSetState],\r\n        category: state.category,\r\n      };\r\n\r\n    case \"SUBTRACT_COUNTER\":\r\n      const newState = [\r\n        ...state.menudata.map((item) => {\r\n          if (item.title === action.payload && item.counter > 0) {\r\n            return { ...item, counter: item.counter - 1 };\r\n          } else {\r\n            return { ...item };\r\n          }\r\n        }),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        menudata: [...newState],\r\n        category: state.category,\r\n      };\r\n\r\n    case \"REMOVE_ITEM_COUNTER\":\r\n      const removeitemstate = [\r\n        ...state.menudata.map((item) => {\r\n          if (item.title === action.payload) {\r\n            return { ...item, counter: 0 };\r\n          } else {\r\n            return { ...item };\r\n          }\r\n        }),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        menudata: [...removeitemstate],\r\n        category: state.category,\r\n      };\r\n\r\n    case \"RESET\":\r\n      const resetstate = [\r\n        ...state.menudata.map((item) => {\r\n          return { ...item, counter: 0 };\r\n        }),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        menudata: [...resetstate],\r\n        category: state.category,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { menuReducer } from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  menuReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}